{"ast":null,"code":"var _jsxFileName = \"D:\\\\Renamble\\\\mernstackproject\\\\client\\\\src\\\\cardmapjson\\\\info.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import animeInfo from \"./data\"; \n// import \"./card.css\";\n// import Navbar from \"./navbar\";\n\n// function Info() {\n//   const location = useLocation();\n//   const animeId = location.state?.anime?.id; \n//   const navigate = useNavigate();\n//   const [anime, setAnime] = useState(null);\n\n//   // const anime = animeInfo.find((a) => a.id === animeId);\n//   useEffect(() => {\n//     const foundAnime = animeInfo.find((a) => a.id === animeId);\n//     setAnime(foundAnime || null);\n//   }, [animeId]);\n\n//   if (!anime) {\n//     return <h1 style={{ textAlign: \"center\" }}>No anime data available</h1>;\n//   }\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n//         <h1>{anime.title}</h1><br/>\n//         <img \n//           src={require(`./images/${anime.image}`)} \n//           alt={anime.title} \n//           style={{ width: \"300px\", borderRadius: \"10px\" }} \n//         />\n//         <br/>\n//         <p><strong>Episodes:</strong> {anime.episodes}</p><br/>\n//         <p><strong>Genres:</strong> {anime.genre.join(\", \")}</p><br/>\n//         <p><strong>Description:</strong> {anime.description}</p><br/>\n\n//         {anime.watchLink && (\n//           <a href={anime.watchLink} target=\"_blank\" rel=\"noopener noreferrer\">\n//             <button className=\"watch-button\">Watch Anime</button>\n//           </a>\n//         )}\n//         <br/><br/>\n\n//         <button onClick={() => navigate(\"/animepage\")} className=\"info-button\">Anime Page</button><br/><br/>\n\n//         <h1>Characters</h1><br/><br/>\n//         <div className=\"character-container\">\n//           {anime.character.length > 0 ? (\n//             anime.character.map((char) => (\n//               <div key={char.id} className=\"card-info\">\n//                 <img \n//                   src={require(`./images/${char.image}`)} \n//                   alt={char.name} \n//                   className=\"card-img\" \n//                 />\n//                 <h2 className=\"card-title\">{char.name}</h2>\n//                 {char.character && <h3 className=\"card-role\">{char.character}</h3>}\n//               </div>\n//             ))\n//           ) : (\n//             <p>No characters found</p>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Info;\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Navbar from \"./\";\nimport \"./card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Info() {\n  _s();\n  var _location$state, _location$state$anime;\n  const location = useLocation();\n  const animeId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$anime = _location$state.anime) === null || _location$state$anime === void 0 ? void 0 : _location$state$anime.id;\n  const navigate = useNavigate();\n  const [anime, setAnime] = useState(null);\n  useEffect(() => {\n    axios.get(`http://localhost:3001/getssingleanimebyid/${animeId}`).then(response => {\n      setAnime(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching anime details:\", error);\n    });\n  }, [animeId]);\n  if (!anime) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"No anime data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        padding: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: anime.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: anime.image,\n        alt: anime.title,\n        style: {\n          width: \"300px\",\n          borderRadius: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Episodes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 12\n        }, this), \" \", anime.episodes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Genres:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 12\n        }, this), \" \", anime.genre.join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 12\n        }, this), \" \", anime.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), anime.watchLink && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: anime.watchLink,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"watch-button\",\n          children: \"Watch Anime\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/animepage\"),\n        className: \"info-button\",\n        children: \"Back to Anime List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-container\",\n        children: anime.character.length > 0 ? anime.character.map(char => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: char.image,\n            alt: char.name,\n            className: \"card-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: char.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)]\n        }, char.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No characters found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(Info, \"Dwfl3EhZOx2RDMiR0jQSPDPMbhI=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Info;\nexport default Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","axios","Navbar","jsxDEV","_jsxDEV","Info","_s","_location$state","_location$state$anime","location","animeId","state","anime","id","navigate","setAnime","get","then","response","data","catch","error","console","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","padding","title","src","image","alt","width","borderRadius","episodes","genre","join","description","watchLink","href","target","rel","className","onClick","character","length","map","char","name","_c","$RefreshReg$"],"sources":["D:/Renamble/mernstackproject/client/src/cardmapjson/info.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// import animeInfo from \"./data\"; \r\n// import \"./card.css\";\r\n// import Navbar from \"./navbar\";\r\n\r\n// function Info() {\r\n//   const location = useLocation();\r\n//   const animeId = location.state?.anime?.id; \r\n//   const navigate = useNavigate();\r\n//   const [anime, setAnime] = useState(null);\r\n\r\n//   // const anime = animeInfo.find((a) => a.id === animeId);\r\n//   useEffect(() => {\r\n//     const foundAnime = animeInfo.find((a) => a.id === animeId);\r\n//     setAnime(foundAnime || null);\r\n//   }, [animeId]);\r\n\r\n//   if (!anime) {\r\n//     return <h1 style={{ textAlign: \"center\" }}>No anime data available</h1>;\r\n//   }\r\n\r\n  \r\n\r\n//   return (\r\n//     <div>\r\n//       <Navbar />\r\n//       <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n//         <h1>{anime.title}</h1><br/>\r\n//         <img \r\n//           src={require(`./images/${anime.image}`)} \r\n//           alt={anime.title} \r\n//           style={{ width: \"300px\", borderRadius: \"10px\" }} \r\n//         />\r\n//         <br/>\r\n//         <p><strong>Episodes:</strong> {anime.episodes}</p><br/>\r\n//         <p><strong>Genres:</strong> {anime.genre.join(\", \")}</p><br/>\r\n//         <p><strong>Description:</strong> {anime.description}</p><br/>\r\n\r\n//         {anime.watchLink && (\r\n//           <a href={anime.watchLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//             <button className=\"watch-button\">Watch Anime</button>\r\n//           </a>\r\n//         )}\r\n//         <br/><br/>\r\n\r\n//         <button onClick={() => navigate(\"/animepage\")} className=\"info-button\">Anime Page</button><br/><br/>\r\n\r\n//         <h1>Characters</h1><br/><br/>\r\n//         <div className=\"character-container\">\r\n//           {anime.character.length > 0 ? (\r\n//             anime.character.map((char) => (\r\n//               <div key={char.id} className=\"card-info\">\r\n//                 <img \r\n//                   src={require(`./images/${char.image}`)} \r\n//                   alt={char.name} \r\n//                   className=\"card-img\" \r\n//                 />\r\n//                 <h2 className=\"card-title\">{char.name}</h2>\r\n//                 {char.character && <h3 className=\"card-role\">{char.character}</h3>}\r\n//               </div>\r\n//             ))\r\n//           ) : (\r\n//             <p>No characters found</p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Info;\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"./\";\r\nimport \"./card.css\";\r\n\r\nfunction Info() {\r\n  const location = useLocation();\r\n  const animeId = location.state?.anime?.id;\r\n  const navigate = useNavigate();\r\n  const [anime, setAnime] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:3001/getssingleanimebyid/${animeId}`)\r\n      .then((response) => {\r\n        setAnime(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching anime details:\", error);\r\n      });\r\n  }, [animeId]);\r\n\r\n  if (!anime) {\r\n    return <h1 style={{ textAlign: \"center\" }}>No anime data available</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n        <h1>{anime.title}</h1>\r\n        <img\r\n          src={anime.image}\r\n          alt={anime.title}\r\n          style={{ width: \"300px\", borderRadius: \"10px\" }}\r\n        />\r\n        <p><strong>Episodes:</strong> {anime.episodes}</p>\r\n        <p><strong>Genres:</strong> {anime.genre.join(\", \")}</p>\r\n        <p><strong>Description:</strong> {anime.description}</p>\r\n\r\n        {anime.watchLink && (\r\n          <a href={anime.watchLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <button className=\"watch-button\">Watch Anime</button>\r\n          </a>\r\n        )}\r\n\r\n        <button onClick={() => navigate(\"/animepage\")} className=\"info-button\">\r\n          Back to Anime List\r\n        </button>\r\n\r\n        <h1>Characters</h1>\r\n        <div className=\"character-container\">\r\n          {anime.character.length > 0 ? (\r\n            anime.character.map((char) => (\r\n              <div key={char.id} className=\"card-info\">\r\n                <img src={char.image} alt={char.name} className=\"card-img\" />\r\n                <h2 className=\"card-title\">{char.name}</h2>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No characters found</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}