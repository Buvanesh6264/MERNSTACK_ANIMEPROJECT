{"ast":null,"code":"// import { Link, useNavigate } from 'react-router-dom';\n// import { useState } from 'react';\n// import './signuppage.css';\n// import img from './images/loginpage.jpg';\n// import users from './user'\n\n// export default function Signup() {\n//     const navigate = useNavigate();\n//     const [showPassword, setShowPassword] = useState(false);\n//     const [formData, setFormData] = useState({name: '',email: '',phone: '',password: '',confirmPassword: ''});\n//     const [errors, setErrors] = useState({});\n\n//     function togglePasswordVisibility() {\n//         setShowPassword(prevState => !prevState);\n//     }\n\n//     function handleChange(e) {\n//         const { name, value } = e.target;\n//         setFormData({ ...formData, [name]: value });\n//     }\n\n//     function validateForm() {\n//         let newErrors = {};\n\n//         if (!formData.name.trim()) {\n//             newErrors.name = \"Name is required\";\n//         }\n\n//         if (!formData.email.trim()) {\n//             newErrors.email = \"Email is required\";\n//         } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n//             newErrors.email = \"Invalid email format\";\n//         }\n\n//         if (!formData.phone.trim()) {\n//             newErrors.phone = \"Phone number is required\";\n//         } else if (!/^\\d+$/.test(formData.phone)) {\n//             newErrors.phone = \"Phone number must contain only digits\";\n//         } else if (formData.phone.length < 10) {\n//             newErrors.phone = \"Phone number must be at least 10 digits\";\n//         }\n\n//         if (!formData.password) {\n//             newErrors.password = \"Password is required\";\n//         } else if (formData.password.length < 4) {\n//             newErrors.password = \"Password must be at least 6 characters\";\n//         }\n\n//         if (!formData.confirmPassword) {\n//             newErrors.confirmPassword = \"Please confirm your password\";\n//         } else if (formData.confirmPassword !== formData.password) {\n//             newErrors.confirmPassword = \"Passwords do not match\";\n//         }\n//         const userExists = users.some(\n//             user => user.email === formData.email || user.phone === formData.phone\n//         );\n\n//         if (userExists) {\n//             newErrors.userExists = \"User with this email or phone number already exists\";\n//         }\n//         setErrors(newErrors);\n//         return Object.keys(newErrors).length === 0;\n//     }\n\n//     function handleSubmit(e) {\n//         e.preventDefault();\n//         if (validateForm()) {\n//             alert(\"Registration successful!\");\n//             navigate('/'); \n//         }\n//     }\n\n//     return (\n//         <div className=\"box\">\n//             <div className='login-image'>\n//                 <img src={img} alt='log-img' />\n//             </div>\n//             <form action=\"#\" className=\"form\" onSubmit={handleSubmit}>\n//                 <h1 className=\"form-title\">Register User</h1>\n\n//                 <div className=\"form-group\">\n//                     <input type=\"text\" name=\"name\" className=\"form-control\" required value={formData.name} onChange={handleChange} />\n//                     <label className=\"form-label\">Enter Your Name</label>\n//                     {errors.name && <p className=\"error-message\">{errors.name}</p>}\n//                 </div>\n\n//                 <div className=\"form-group\">\n//                     <input type=\"text\" name=\"email\" className=\"form-control\" required value={formData.email} onChange={handleChange} />\n//                     <label className=\"form-label\">Enter Your Email</label>\n//                     {errors.email && <p className=\"error-message\">{errors.email}</p>}\n//                 </div>\n\n//                 <div className=\"form-group\">\n//                     <input type=\"text\" name=\"phone\" className=\"form-control\" required value={formData.phone} onChange={handleChange} onInput={(e) => {\n//                             e.target.value = e.target.value.replace(/\\D/, '');\n//                             if (e.target.value.length > 10) { e.target.value = e.target.value.slice(0, 10);}}}/>\n//                     <label className=\"form-label\">Enter Your Phone</label>\n//                     {errors.phone && <p className=\"error-message\">{errors.phone}</p>}\n//                 </div>\n\n//                 <div className=\"form-group\">\n//                     <input type={showPassword ? \"text\" : \"password\"} name=\"password\" className=\"form-control\" required value={formData.password} onChange={handleChange} />\n//                     <label className=\"form-label\">Enter Your Password</label>\n//                     {errors.password && <p className=\"error-message\">{errors.password}</p>}\n//                 </div>\n\n//                 <div className=\"form-group\">\n//                     <input type={showPassword ? \"text\" : \"password\"} name=\"confirmPassword\" className=\"form-control\" required value={formData.confirmPassword} onChange={handleChange} />\n//                     <label className=\"form-label\">Confirm Password</label>\n//                     {errors.confirmPassword && <p className=\"error-message\">{errors.confirmPassword}</p>}\n//                 </div>\n\n//                 {errors.userExists && <p className=\"error-message\">{errors.userExists}</p>}\n\n//                 <div className='form-show'>\n//                     <Link to='/' className='Link'>Login</Link> \n//                     <label className=\"showlabel\" htmlFor=\"show\"> \n//                         <input type=\"checkbox\" id=\"show\" onChange={togglePasswordVisibility} checked={showPassword} />\n//                         Show Password\n//                     </label>  \n//                 </div>\n\n//                 <div className=\"bottom-box\" style={{ alignItems: \"center\" }}>\n//                     <button type=\"submit\" className=\"form-button\">Submit</button>\n//                 </div>\n//             </form>\n//         </div>\n//     )\n// }","map":{"version":3,"names":[],"sources":["D:/Renamble/mernstackproject/client/src/cardmapjson/signuppage.js"],"sourcesContent":["// import { Link, useNavigate } from 'react-router-dom';\r\n// import { useState } from 'react';\r\n// import './signuppage.css';\r\n// import img from './images/loginpage.jpg';\r\n// import users from './user'\r\n\r\n// export default function Signup() {\r\n//     const navigate = useNavigate();\r\n//     const [showPassword, setShowPassword] = useState(false);\r\n//     const [formData, setFormData] = useState({name: '',email: '',phone: '',password: '',confirmPassword: ''});\r\n//     const [errors, setErrors] = useState({});\r\n\r\n//     function togglePasswordVisibility() {\r\n//         setShowPassword(prevState => !prevState);\r\n//     }\r\n\r\n//     function handleChange(e) {\r\n//         const { name, value } = e.target;\r\n//         setFormData({ ...formData, [name]: value });\r\n//     }\r\n\r\n//     function validateForm() {\r\n//         let newErrors = {};\r\n\r\n//         if (!formData.name.trim()) {\r\n//             newErrors.name = \"Name is required\";\r\n//         }\r\n\r\n//         if (!formData.email.trim()) {\r\n//             newErrors.email = \"Email is required\";\r\n//         } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n//             newErrors.email = \"Invalid email format\";\r\n//         }\r\n\r\n//         if (!formData.phone.trim()) {\r\n//             newErrors.phone = \"Phone number is required\";\r\n//         } else if (!/^\\d+$/.test(formData.phone)) {\r\n//             newErrors.phone = \"Phone number must contain only digits\";\r\n//         } else if (formData.phone.length < 10) {\r\n//             newErrors.phone = \"Phone number must be at least 10 digits\";\r\n//         }\r\n\r\n//         if (!formData.password) {\r\n//             newErrors.password = \"Password is required\";\r\n//         } else if (formData.password.length < 4) {\r\n//             newErrors.password = \"Password must be at least 6 characters\";\r\n//         }\r\n\r\n//         if (!formData.confirmPassword) {\r\n//             newErrors.confirmPassword = \"Please confirm your password\";\r\n//         } else if (formData.confirmPassword !== formData.password) {\r\n//             newErrors.confirmPassword = \"Passwords do not match\";\r\n//         }\r\n//         const userExists = users.some(\r\n//             user => user.email === formData.email || user.phone === formData.phone\r\n//         );\r\n\r\n//         if (userExists) {\r\n//             newErrors.userExists = \"User with this email or phone number already exists\";\r\n//         }\r\n//         setErrors(newErrors);\r\n//         return Object.keys(newErrors).length === 0;\r\n//     }\r\n\r\n//     function handleSubmit(e) {\r\n//         e.preventDefault();\r\n//         if (validateForm()) {\r\n//             alert(\"Registration successful!\");\r\n//             navigate('/'); \r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"box\">\r\n//             <div className='login-image'>\r\n//                 <img src={img} alt='log-img' />\r\n//             </div>\r\n//             <form action=\"#\" className=\"form\" onSubmit={handleSubmit}>\r\n//                 <h1 className=\"form-title\">Register User</h1>\r\n\r\n//                 <div className=\"form-group\">\r\n//                     <input type=\"text\" name=\"name\" className=\"form-control\" required value={formData.name} onChange={handleChange} />\r\n//                     <label className=\"form-label\">Enter Your Name</label>\r\n//                     {errors.name && <p className=\"error-message\">{errors.name}</p>}\r\n//                 </div>\r\n\r\n//                 <div className=\"form-group\">\r\n//                     <input type=\"text\" name=\"email\" className=\"form-control\" required value={formData.email} onChange={handleChange} />\r\n//                     <label className=\"form-label\">Enter Your Email</label>\r\n//                     {errors.email && <p className=\"error-message\">{errors.email}</p>}\r\n//                 </div>\r\n\r\n//                 <div className=\"form-group\">\r\n//                     <input type=\"text\" name=\"phone\" className=\"form-control\" required value={formData.phone} onChange={handleChange} onInput={(e) => {\r\n//                             e.target.value = e.target.value.replace(/\\D/, '');\r\n//                             if (e.target.value.length > 10) { e.target.value = e.target.value.slice(0, 10);}}}/>\r\n//                     <label className=\"form-label\">Enter Your Phone</label>\r\n//                     {errors.phone && <p className=\"error-message\">{errors.phone}</p>}\r\n//                 </div>\r\n\r\n//                 <div className=\"form-group\">\r\n//                     <input type={showPassword ? \"text\" : \"password\"} name=\"password\" className=\"form-control\" required value={formData.password} onChange={handleChange} />\r\n//                     <label className=\"form-label\">Enter Your Password</label>\r\n//                     {errors.password && <p className=\"error-message\">{errors.password}</p>}\r\n//                 </div>\r\n\r\n//                 <div className=\"form-group\">\r\n//                     <input type={showPassword ? \"text\" : \"password\"} name=\"confirmPassword\" className=\"form-control\" required value={formData.confirmPassword} onChange={handleChange} />\r\n//                     <label className=\"form-label\">Confirm Password</label>\r\n//                     {errors.confirmPassword && <p className=\"error-message\">{errors.confirmPassword}</p>}\r\n//                 </div>\r\n\r\n//                 {errors.userExists && <p className=\"error-message\">{errors.userExists}</p>}\r\n\r\n\r\n//                 <div className='form-show'>\r\n//                     <Link to='/' className='Link'>Login</Link> \r\n//                     <label className=\"showlabel\" htmlFor=\"show\"> \r\n//                         <input type=\"checkbox\" id=\"show\" onChange={togglePasswordVisibility} checked={showPassword} />\r\n//                         Show Password\r\n//                     </label>  \r\n//                 </div>\r\n\r\n//                 <div className=\"bottom-box\" style={{ alignItems: \"center\" }}>\r\n//                     <button type=\"submit\" className=\"form-button\">Submit</button>\r\n//                 </div>\r\n//             </form>\r\n//         </div>\r\n//     )\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}