{"ast":null,"code":"var _jsxFileName = \"D:\\\\Renamble\\\\react\\\\my-app\\\\src\\\\cardmapjson\\\\info.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { useLocation,useNavigate } from \"react-router-dom\";\n// import animeInfo from \"./data\"; \n// import \"./card.css\"\n// import charactersInfo from \"./character\";\n// import Navbar from \"./navbar\";\n\n// function Info() {\n//   const location = useLocation();\n//   const animeId = location.state?.anime?.id; \n//   const characters = charactersInfo[animeId] || [];\n//   const navigate = useNavigate();\n//       function mainpage(){\n//           navigate(\"/homepage\");\n//       }\n//   const anime = animeInfo.find((a) => a.id === animeId);\n// //   if (!anime) {\n// //     return <h1>No anime data available</h1>;\n// //   }\n//   return (\n//     <div>\n//       <Navbar/>\n//       <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n//         <h1>{anime.title}</h1><br/>\n//         <img src={require(`./images/${anime.image}`)} alt={anime.title} style={{ width: \"300px\", borderRadius: \"10px\" }} /><br/>\n//         <p><strong>Episodes:</strong> {anime.episodes}</p><br/>\n//         <p><strong>Genres:</strong> {anime.genre.join(\", \")}</p><br/>\n//         <p><strong>Description:</strong> {anime.description}</p><br/>\n//         <button onClick={mainpage} className=\"info-button\">Main Page</button><br/><br/>\n//         <h1>Characters</h1><br/><br/>\n//         <div>\n//           {characters.length > 0 ? (\n//             characters.map((char) => (\n//               <div key={char.id} className=\"card-info\">\n//                 <img src={require(`./images/${char.image}`)} alt={char.name} className=\"card-img\" />\n//                 <h2 className=\"card-title\">{char.name}</h2>\n//                 <h3 className=\"card-episodes\">{char.character}</h3>\n//               </div>\n//             ))\n//           ) : (\n//             <p>No characters found</p>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Info;\nimport React from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport animeInfo from \"./data\";\nimport \"./card.css\";\nimport Navbar from \"./navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Info() {\n  _s();\n  var _location$state, _location$state$anime;\n  const location = useLocation();\n  const animeId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$anime = _location$state.anime) === null || _location$state$anime === void 0 ? void 0 : _location$state$anime.id;\n  const navigate = useNavigate();\n\n  // Find the anime by ID\n  const anime = animeInfo.find(a => a.id === animeId);\n\n  // If no anime is found, show a message\n  if (!anime) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"No anime data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        padding: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: anime.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(`./images/${anime.image}`),\n        alt: anime.title,\n        style: {\n          width: \"300px\",\n          borderRadius: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Episodes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 12\n        }, this), \" \", anime.episodes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Genres:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 12\n        }, this), \" \", anime.genre.join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 65\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), \" \", anime.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 66\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/homepage\"),\n        className: \"info-button\",\n        children: \"Main Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 97\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 102\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-container\",\n        children: anime.character.length > 0 ? anime.character.map(char => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: require(`./images/${char.image}`),\n            alt: char.name,\n            className: \"card-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: char.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), char.character && /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-role\",\n            children: char.character\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 36\n          }, this)]\n        }, char.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No characters found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Info, \"ZmJpvzBBf8J7VCgSKqUUk0eHjAY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Info;\nexport default Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["React","useLocation","useNavigate","animeInfo","Navbar","jsxDEV","_jsxDEV","Info","_s","_location$state","_location$state$anime","location","animeId","state","anime","id","navigate","find","a","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","padding","title","src","require","image","alt","width","borderRadius","episodes","genre","join","description","onClick","className","character","length","map","char","name","_c","$RefreshReg$"],"sources":["D:/Renamble/react/my-app/src/cardmapjson/info.js"],"sourcesContent":["\r\n// import React from \"react\";\r\n// import { useLocation,useNavigate } from \"react-router-dom\";\r\n// import animeInfo from \"./data\"; \r\n// import \"./card.css\"\r\n// import charactersInfo from \"./character\";\r\n// import Navbar from \"./navbar\";\r\n\r\n// function Info() {\r\n//   const location = useLocation();\r\n//   const animeId = location.state?.anime?.id; \r\n//   const characters = charactersInfo[animeId] || [];\r\n//   const navigate = useNavigate();\r\n//       function mainpage(){\r\n//           navigate(\"/homepage\");\r\n//       }\r\n//   const anime = animeInfo.find((a) => a.id === animeId);\r\n// //   if (!anime) {\r\n// //     return <h1>No anime data available</h1>;\r\n// //   }\r\n//   return (\r\n//     <div>\r\n//       <Navbar/>\r\n//       <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n//         <h1>{anime.title}</h1><br/>\r\n//         <img src={require(`./images/${anime.image}`)} alt={anime.title} style={{ width: \"300px\", borderRadius: \"10px\" }} /><br/>\r\n//         <p><strong>Episodes:</strong> {anime.episodes}</p><br/>\r\n//         <p><strong>Genres:</strong> {anime.genre.join(\", \")}</p><br/>\r\n//         <p><strong>Description:</strong> {anime.description}</p><br/>\r\n//         <button onClick={mainpage} className=\"info-button\">Main Page</button><br/><br/>\r\n//         <h1>Characters</h1><br/><br/>\r\n//         <div>\r\n//           {characters.length > 0 ? (\r\n//             characters.map((char) => (\r\n//               <div key={char.id} className=\"card-info\">\r\n//                 <img src={require(`./images/${char.image}`)} alt={char.name} className=\"card-img\" />\r\n//                 <h2 className=\"card-title\">{char.name}</h2>\r\n//                 <h3 className=\"card-episodes\">{char.character}</h3>\r\n//               </div>\r\n//             ))\r\n//           ) : (\r\n//             <p>No characters found</p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Info;\r\nimport React from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport animeInfo from \"./data\"; \r\nimport \"./card.css\";\r\nimport Navbar from \"./navbar\";\r\n\r\nfunction Info() {\r\n  const location = useLocation();\r\n  const animeId = location.state?.anime?.id; \r\n  const navigate = useNavigate();\r\n\r\n  // Find the anime by ID\r\n  const anime = animeInfo.find((a) => a.id === animeId);\r\n\r\n  // If no anime is found, show a message\r\n  if (!anime) {\r\n    return <h1 style={{ textAlign: \"center\" }}>No anime data available</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n        <h1>{anime.title}</h1><br/>\r\n        <img \r\n          src={require(`./images/${anime.image}`)} \r\n          alt={anime.title} \r\n          style={{ width: \"300px\", borderRadius: \"10px\" }} \r\n        />\r\n        <br/>\r\n        <p><strong>Episodes:</strong> {anime.episodes}</p><br/>\r\n        <p><strong>Genres:</strong> {anime.genre.join(\", \")}</p><br/>\r\n        <p ><strong>Description:</strong> {anime.description}</p><br/>\r\n        \r\n        <button onClick={() => navigate(\"/homepage\")} className=\"info-button\">Main Page</button><br/><br/>\r\n\r\n        <h1>Characters</h1><br/><br/>\r\n        <div className=\"character-container\">\r\n          {anime.character.length > 0 ? (\r\n            anime.character.map((char) => (\r\n              <div key={char.id} className=\"card-info\">\r\n                <img \r\n                  src={require(`./images/${char.image}`)} \r\n                  alt={char.name} \r\n                  className=\"card-img\" \r\n                />\r\n                <h2 className=\"card-title\">{char.name}</h2>\r\n                {char.character && <h3 className=\"card-role\">{char.character}</h3>}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No characters found</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}