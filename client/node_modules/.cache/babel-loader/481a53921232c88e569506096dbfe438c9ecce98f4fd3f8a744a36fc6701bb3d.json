{"ast":null,"code":"var _jsxFileName = \"D:\\\\Renamble\\\\react\\\\my-app\\\\src\\\\cardmapjson\\\\loginpage.js\",\n  _s = $RefreshSig$();\n// import {Link, useNavigate } from 'react-router-dom';\n// import './loginpage.css'\n// export default function Login(){\n//     const navigate =useNavigate();\n//     return(\n//         <div class=\"box\">\n//             <form action=\"#\" class=\"form\">\n//                 <img src={\"\"} alt=\"logo\" />\n//                 <h1 clas=\"form-title\">Sign In</h1><br/>\n\n//                 <div class=\"form-group\">\n//                     <input type=\"text\" class=\"form-control\" required />\n//                     <label for=\"\" class=\"form-label\">Email or Phone</label>\n//                 </div>\n//                 <div class=\"form-group\">\n//                     <input type=\"password\" class=\"form-control\" required id=\"txtPassword\" />\n//                     <label for=\"\" class=\"form-label\">Enter Your Password</label>\n//                 </div>\n//                 <div class=\"\">\n//                     <label class=\"showlabel\">Show Password\n//                         <input type=\"checkbox\" id=\"show\" onClick={()=>{\n//                             const Password = document.querySelector(\"#txtPassword\");\n//                             const type = Password.getAttribute(\"type\")===\"password\" ? \"text\" : \"password\";\n//                             Password.setAttribute(\"type\",type);\n//                         }} />\n//                     </label>            \n//                 </div>\n\n//                 <div class=\"bottom-box\">\n//                     <Link to='/Signup'>New User</Link>\n//                     <button class=\"form-button\" onClick={()=>{\n//                         navigate(\"/homepage\")\n//                     }}>Next</button>\n//                 </div>\n//             </form>\n\n//         </div>\n//     )\n// }\nimport logo from '../users/amazon.png';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport '../users/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const navigate = useNavigate();\n\n  // State variables for form inputs\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState('');\n\n  // Mock user data for validation\n  const mockUser = {\n    email: 'testuser@gmail.com',\n    password: '123456'\n  };\n  const handleLogin = e => {\n    e.preventDefault();\n\n    // Validation\n    if (!email || !password) {\n      setError('Both fields are required!');\n      return;\n    }\n    if (email === mockUser.email && password === mockUser.password) {\n      navigate('/homepage');\n    } else {\n      setError('Invalid Email or Password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"form-title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          required: true,\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Email or Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? \"text\" : \"password\",\n          className: \"form-control\",\n          required: true,\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Enter Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group checkbox-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"showPassword\",\n          checked: showPassword,\n          onChange: () => setShowPassword(!showPassword)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"showPassword\",\n          children: \"Show Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-box\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Signup\",\n          children: \"New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"form-button\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"TVprDUjy8Y1oV6Rvg24OBtDbP58=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["logo","Link","useNavigate","useState","jsxDEV","_jsxDEV","Login","_s","navigate","email","setEmail","password","setPassword","showPassword","setShowPassword","error","setError","mockUser","handleLogin","e","preventDefault","className","children","onSubmit","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","required","value","onChange","target","id","checked","htmlFor","to","_c","$RefreshReg$"],"sources":["D:/Renamble/react/my-app/src/cardmapjson/loginpage.js"],"sourcesContent":["// import {Link, useNavigate } from 'react-router-dom';\r\n// import './loginpage.css'\r\n// export default function Login(){\r\n//     const navigate =useNavigate();\r\n//     return(\r\n//         <div class=\"box\">\r\n//             <form action=\"#\" class=\"form\">\r\n//                 <img src={\"\"} alt=\"logo\" />\r\n//                 <h1 clas=\"form-title\">Sign In</h1><br/>\r\n\r\n//                 <div class=\"form-group\">\r\n//                     <input type=\"text\" class=\"form-control\" required />\r\n//                     <label for=\"\" class=\"form-label\">Email or Phone</label>\r\n//                 </div>\r\n//                 <div class=\"form-group\">\r\n//                     <input type=\"password\" class=\"form-control\" required id=\"txtPassword\" />\r\n//                     <label for=\"\" class=\"form-label\">Enter Your Password</label>\r\n//                 </div>\r\n//                 <div class=\"\">\r\n//                     <label class=\"showlabel\">Show Password\r\n//                         <input type=\"checkbox\" id=\"show\" onClick={()=>{\r\n//                             const Password = document.querySelector(\"#txtPassword\");\r\n//                             const type = Password.getAttribute(\"type\")===\"password\" ? \"text\" : \"password\";\r\n//                             Password.setAttribute(\"type\",type);\r\n//                         }} />\r\n//                     </label>            \r\n//                 </div>\r\n\r\n//                 <div class=\"bottom-box\">\r\n//                     <Link to='/Signup'>New User</Link>\r\n//                     <button class=\"form-button\" onClick={()=>{\r\n//                         navigate(\"/homepage\")\r\n//                     }}>Next</button>\r\n//                 </div>\r\n//             </form>\r\n            \r\n//         </div>\r\n//     )\r\n// }\r\nimport logo from '../users/amazon.png';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport '../users/Login.css';\r\n\r\nexport default function Login() {\r\n    const navigate = useNavigate();\r\n    \r\n    // State variables for form inputs\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    // Mock user data for validation\r\n    const mockUser = {\r\n        email: 'testuser@gmail.com',\r\n        password: '123456'\r\n    };\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Validation\r\n        if (!email || !password) {\r\n            setError('Both fields are required!');\r\n            return;\r\n        }\r\n\r\n        if (email === mockUser.email && password === mockUser.password) {\r\n            navigate('/homepage');\r\n        } else {\r\n            setError('Invalid Email or Password');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <form className=\"form\" onSubmit={handleLogin}>\r\n                <img src={logo} alt=\"logo\" />\r\n                <h1 className=\"form-title\">Sign In</h1>\r\n\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        required\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                    <label className=\"form-label\">Email or Phone</label>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        className=\"form-control\"\r\n                        required\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    <label className=\"form-label\">Enter Your Password</label>\r\n                </div>\r\n\r\n                {/* Show Password Checkbox */}\r\n                <div className=\"form-group checkbox-group\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"showPassword\"\r\n                        checked={showPassword}\r\n                        onChange={() => setShowPassword(!showPassword)}\r\n                    />\r\n                    <label htmlFor=\"showPassword\">Show Password</label>\r\n                </div>\r\n\r\n                <div className=\"bottom-box\">\r\n                    <Link to=\"/Signup\">New User</Link>\r\n                    <button type=\"submit\" className=\"form-button\">Next</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}